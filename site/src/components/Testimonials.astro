---
import type { Testimonial } from '@data/testimonials';
const { testimonials = [], lang = 'en', title, tabs } = Astro.props as {
  testimonials: Testimonial[];
  lang: 'en' | 'ru';
  title?: string;
  tabs?: { dev: string; teacher: string };
};
const active = Astro.url.searchParams.get('t') === 'teacher' ? 'teacher' : 'dev';
const devGroup = testimonials.filter((t) => t.kind === 'dev');
const teacherGroup = testimonials.filter((t) => t.kind === 'teacher');
---
<section id="testimonials" class="space-y-6">
  <div class="flex items-center justify-between">
    <h2 class="text-3xl font-semibold text-white">{title ?? (lang === 'ru' ? 'Отзывы' : 'Testimonials')}</h2>
    <div class="flex gap-2 rounded-full border border-white/10 bg-white/5 p-1 text-sm">
      <a href={`?t=dev`} data-tab="dev" role="button" aria-pressed={active === 'dev' ? 'true' : 'false'} class={`rounded-full px-3 py-1 ${active === 'dev' ? 'bg-brand text-white' : 'text-slate-300 hover:text-white'}`}>
        {tabs?.dev ?? (lang === 'ru' ? 'Разработчик' : 'Developer')}
      </a>
      <a href={`?t=teacher`} data-tab="teacher" role="button" aria-pressed={active === 'teacher' ? 'true' : 'false'} class={`rounded-full px-3 py-1 ${active === 'teacher' ? 'bg-brand text-white' : 'text-slate-300 hover:text-white'}`}>
        {tabs?.teacher ?? (lang === 'ru' ? 'Преподаватель' : 'Mentor')}
      </a>
    </div>
  </div>
  <div class="grid gap-4 md:grid-cols-2">
    {devGroup.map((item) => (
      <figure data-kind="dev" class={`rounded-2xl border border-white/10 bg-white/5 p-5 ${active === 'dev' ? '' : 'hidden'}`} key={item.quote[lang]}>
        <blockquote class="text-slate-100">“{item.quote[lang]}”</blockquote>
        <figcaption class="mt-3 text-sm text-slate-400">
          {item.author}
          {item.role ? (
            <span class="text-slate-500"> · {item.role}</span>
          ) : null}
          {item.url ? (
            <a href={item.url} target="_blank" rel="noreferrer" class="ml-2 text-brand-light hover:text-brand">{lang === 'ru' ? 'Источник' : 'Source'}</a>
          ) : null}
        </figcaption>
      </figure>
    ))}
    {teacherGroup.map((item) => (
      <figure data-kind="teacher" class={`rounded-2xl border border-white/10 bg-white/5 p-5 ${active === 'teacher' ? '' : 'hidden'}`} key={item.quote[lang]}>
        <blockquote class="text-slate-100">“{item.quote[lang]}”</blockquote>
        <figcaption class="mt-3 text-sm text-slate-400">
          {item.author}
          {item.role ? (
            <span class="text-slate-500"> · {item.role}</span>
          ) : null}
          {item.url ? (
            <a href={item.url} target="_blank" rel="noreferrer" class="ml-2 text-brand-light hover:text-brand">{lang === 'ru' ? 'Источник' : 'Source'}</a>
          ) : null}
        </figcaption>
      </figure>
    ))}
  </div>

  <script is:inline>
    (() => {
      const root = document.querySelector('section#testimonials');
      if (!root) return;
      const tabButtons = root.querySelectorAll('[data-tab]');
      const cards = root.querySelectorAll('[data-kind]');

      function setActive(kind) {
        const target = kind === 'teacher' ? 'teacher' : 'dev';

        tabButtons.forEach((el) => {
          const key = el.getAttribute('data-tab');
          if (key === target) {
            el.classList.add('bg-brand', 'text-white');
            el.classList.remove('text-slate-300', 'hover:text-white');
            el.setAttribute('aria-pressed', 'true');
          } else {
            el.classList.remove('bg-brand', 'text-white');
            el.classList.add('text-slate-300', 'hover:text-white');
            el.setAttribute('aria-pressed', 'false');
          }
        });

        cards.forEach((el) => {
          const k = el.getAttribute('data-kind');
          el.classList.toggle('hidden', k !== target);
        });

        const url = new URL(window.location.href);
        url.searchParams.set('t', target);
        history.replaceState({}, '', url);
      }

      tabButtons.forEach((el) => {
        el.addEventListener('click', (e) => {
          e.preventDefault();
          const key = el.getAttribute('data-tab') || 'dev';
          setActive(key);
        });
      });

      const initial = new URL(window.location.href).searchParams.get('t');
      setActive(initial === 'teacher' ? 'teacher' : 'dev');
    })();
  </script>
</section>
